import React, { useState, useEffect } from 'react';
import Blueprints from '../../constants/blueprints';
import Intersection from '../Intersection';

const Intersections = (props) => {
    const [data, setData ] = useState(null);
    const [requested, setRequested] = useState(false);
    const resource = "http://127.0.0.1:5000/real";

    const payload = {
	method: 'POST',
	headers: {
	    'Accept': 'application/json',
	    'Content-Type': 'application/json'
	},
	body: JSON.stringify({date:'2017-12-14 13:30:00'})
    }
    
    useEffect( () => {
	/* Only request data from trafficSimulator if we change the simulation type
	 * OR DATE!!!
	 */
	if (requested===props.simulationType) {return;}
	setRequested(props.simulationType);
	fetch(resource, payload).then(
	    /* extract data from response and pass it on */
	    (response) => {
		return response.json();
	    }).then(
		/* merge retreived data with blueprint data and update state */
		(jsonData) => {
		    const mergedData = mergeData(jsonData['data'], Blueprints);
		    setData(mergedData);
		});
    }, [props.simulationType, requested, resource]);
    return (
	<>
	    { data ? Object.keys(data).map( key => <Intersection data={data[key]} name={key} key={key} />) : null}
	</>
    )
};

export default Intersections;
